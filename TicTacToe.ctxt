#BlueJ class context
comment0.target=TicTacToe
comment0.text=\r\n\ A\ class\ modelling\ a\ tic-tac-toe\ (noughts\ and\ crosses,\ Xs\ and\ Os)\ game\ in\ a\ very\r\n\ simple\ GUI\ window.\r\n\ \r\n\ @author\ Lynn\ Marshall\r\n\ @version\ November\ 8,\ 2012\r\n
comment1.params=
comment1.target=TicTacToe()
comment1.text=\ \r\n\ Constructs\ a\ new\ Tic-Tac-Toe\ board\ by\ using\ a\ 3\ by\ 3\ grid\ of\ buttons\r\n\ used\ individual\ buttons\ instead\ of\ array\ of\ buttons\ because\ when\ doing\r\n\ that\ it\ would\ make\ the\ game\ run\ slower\ and\ lag\ behind.\r\n
comment2.params=
comment2.target=void\ addListen()
comment2.text=\r\n\ Adds\ the\ listeners\ to\ all\ the\ buttons\ so\ that\ when\ pressed\ they\ \r\n\ start\ my\ set\ methode\r\n\ \r\n
comment3.params=but
comment3.target=void\ yolo(javax.swing.JButton)
comment3.text=\r\n\ Methode\ changes\ the\ text\ in\ the\ button\ to\ represent\ the\ X\ or\ O\r\n\ then\ makes\ that\ button\ unchangable\r\n\ \r\n\ once\ pressed,\ the\ current\ player\ is\ changed\ to\ the\ other\ player\ \r\n\ and\ the\ progress\ message\ is\ changed\r\n\ \r\n\ @param\ JButton\ but\ button\ to\ be\ affected\ by\ the\ changes\r\n
comment4.params=
comment4.target=void\ whoWins()
comment4.text=\r\n\ Checks\ all\ the\ win\ cases\ to\ see\ who\ wins\ the\ game\r\n\ \!isEnabled\ is\ added\ at\ the\ end\ to\ make\ sure\ that\ the\ buttons\ are\ truly\ played\r\n\ that\ way\ the\ game\ does\ not\ compare\ the\ ""\ values.\r\n\ \r\n\ if\ a\ player\ is\ found\ to\ have\ won,\ it\ updates\ the\ progress\ message\ and\ disables\ all\ of\ the\ other\ buttons\r\n\ \r\n\ sub\ comment\:\r\n\ I\ tried\ using\ only\ the\ first\ button\ which\ checks\ everything\ for\ the\ isEnabled\r\n\ yet\ it\ seems\ to\ cause\ problems\ that\ If\ I\ ended\ with\ pressing\ that\ button\ the\ game\ would\ keep\ going\ until\ you\ pressed\ another\ button.\r\n
comment5.params=
comment5.target=void\ allDis()
comment5.text=\r\n\ Method\ is\ used\ to\ disable\ all\ of\ the\ buttons\ after\ a\ game\ has\ been\ won\r\n
comment6.params=
comment6.target=void\ isTie()
comment6.text=\r\n\ Methode\ is\ called\ when\ all\ possible\ moves\ have\ been\ played\ and\ if\ the\ progress\ message\ has\ not\ updated\ saying\ who\ won\r\n\ it\ changes\ the\ label\ to\ say\ that\ it\ has\ ended\ in\ a\ tie.\r\n
comment7.params=
comment7.target=void\ updateWins()
comment7.text=\r\n\ Methode\ updates\ the\ counter\ for\ the\ amount\ of\ wins\r\n
comment8.params=x
comment8.target=void\ reset(int)
comment8.text=\r\n\ Reset\ method\ re-enables\ all\ of\ the\ buttons\ and\ sets\ there\ text\ back\ to\ blank.\r\n\ resets\ the\ amount\ of\ playes\ done\r\n\ updates\ the\ progress\ message\r\n\ the\ method\ is\ called\ by\ both\ the\ new\ game\ and\ Switch\ menu\ buttons,\ they\ send\ either\ a\ 1\ or\ a\ 0\ telling\ the\ reset\ if\ we\ hold\r\n\ \r\n\ @param\ int\ x\ if\ equal\ to\ 1\ the\ start\ player\ is\ changed\ to\ the\ other,\ if\ 0\ the\ start\ player\ stays\ the\ same\r\n
numComments=9
